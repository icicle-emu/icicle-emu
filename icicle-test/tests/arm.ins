0x00000000 [01 10 81 e0]  "add r1, r1, r1"
    r1 = 10 => r1 = 20;
0x00000000 [01 10 91 e0]  "adds r1, r1, r1"
{
    r1 = 10 => r1 = 20;
    r1 = 0x7f => r1 = 0xfe, CY = 0, ZR = 0, NG = 0, OV = 0;
}
0x00000000 [02 30 91 e0]  "adds r3, r1, r2";

0x00000000 [01 10 41 e0]  "sub r1, r1, r1"
    r1 = 10 => r1 = 0;
0x00000000 [01 10 51 e0]  "subs r1, r1, r1"
    r1 = 10 => r1 = 0;

0x80000000 [24 a3 ff 7f] "swivc 0xffa324";

// Performs 32-bit x 16-bit multiply with 48-bit result
//
// @fixme(SLEIGH): 'pc' should not be allowed as a register for this instruction
0x80000000 [c1 f1 20 01] "smlawteq r0, r1, r1, pc"
{
    r0 = 0, r1 = 0x1234_5678, ZR = 0 => r0 = 0;

    // 0x12345678 * 0x1234      = 0x14b60b60060
    // 0x14b60b60060 >> 16      =    0x014b60b6
    // 0x014b60b6 + 0x80000000  =    0x814b60b6
    r0 = 0, r1 = 0x1234_5678, ZR = 1 => r0 = 0x814b60b6;
}

// 0x00011000 [03 da 7c b3] "bfm x3, x16, #0x3c, #0x36";
0x00011000 [01 ea 6c 40] "rsbmi lr,r12,r1, lsl #0x14";


//
// Thumb Mode
//

0x00011000|1 [00 de] "udf #0x0";
0x00011000|1 [00 be] "bkpt 0x0";
0x00011000|1 [ba ba] "hlt 0x3a";

0x00000000|1 [2d e9 f0 41]    "push {r4, r5, r6, r7, r8, lr}"
{
    sp = 0x1018, r4 = 0x4, r5 = 0x5, r6 = 0x6, r7 = 0x7, r8 = 0x8, lr = 0x1234_5678,
    mem[0x1000]:WRITE = [
        00 00 00 00
        00 00 00 00
        00 00 00 00
        00 00 00 00
        00 00 00 00
        00 00 00 00
    ]
    =>
    sp = 0x1000,
    mem[0x1000] = [
        04 00 00 00
        05 00 00 00
        06 00 00 00
        07 00 00 00
        08 00 00 00
        78 56 34 12
    ];
}
0x00000000|1 [30 bd]            "pop {r4, r5, pc}"
{
    sp = 0x20004f64,
    mem[0x20004f64]:READ = [
        04 00 00 00
        05 00 00 00
        79 56 34 12
    ]
    =>
    sp = 0x20004f70, r4 = 0x4, r5 = 0x5, pc = 0x1234_5678;
}

0x00011000|1 [0e cb]          "ldmia r3,{r1,r2,r3}";

// Alternate way of returning from a function (e.g., used in software float intrinsics)
0x00000000|1 [5d f8 08 fb]    "ldr.w pc,[sp],#0x8";

0x00000000|1 [05 46]          "mov r5, r0"
    r0 = 0x1234, r5 = 0 => r5 = 0x1234;
0x00000000|1 [0e 48]          "ldr r0,[0x3c]"
    r0 = 0, mem[0x3c]:READ = [34 12 00 00] => r0 = 0x1234;
0x00000000|1 [00 f0 7e f8]    "bl 0x100"
    => lr = 0x5, pc = 0x100;
0x00000000|1 [00 f0 7e b8]    "b.w 0x100"
    => pc = 0x100;

0x00000000|1 [a1 40]         "lsls r1, r4"
{
    r1 = 0x1234, r4 = 0 => r1 = 0x1234;
    r1 = 0x1234, r4 = 4 => r1 = 0x12340;
}
0x00011000|1 [08 06]        "lsls r0,r1,#0x18"
    r0 = 0, r1 = 1 => r0 = 0x1000000;


// @fixme(SLEIGH) Should this also update the carry flag?
0x00011000|1 [13 f4 40 73]  "ands r3,r3,#0x300"
    r3 = 0x01731f3c, NG = 1, ZR = 1 => r3 = 0x00000300, NG = 0, ZR = 0;

0x00011000|1 [a5 fa 87 f6]  "sel r6,r5,r7"
{
    GE1 = 0, GE2 = 1, GE3 = 0, GE4 = 0, r5 = 0x9fba7f1c, r6 = 0xe2b5319a, r7 = 0x7547029a => r6 = 0x75477f9a;
    GE1 = 1, GE2 = 0, GE3 = 1, GE4 = 1, r5 = 0x9fba7f1c, r6 = 0xe2b5319a, r7 = 0x7547029a => r6 = 0x9fba021c;
}
0x08000000|1 [4f ea 23 1a]  "asr.w r10,r3, asr #0x4"
    r10 = 0, r3 = 0x12345678 => r10 = 0x1234567;

0x00000000|1 {
    [a5 bf]        "ittet ge"
    [80 f8 00 23]  "strb.ge.w r2,[r0,#0x300]"
};

0x00000000|1 [13 f8 01 2b]  "ldrb.w r2,[r3],#0x1";
0x00000000|1 [00 2a]        "cmp r2,#0x0";
0x00000006|1 [fb d1]        "bne 0x0";

0x00000000|1 [72 b6]        "cpsid i";
0x00000000|1 [62 b6]        "cpsie i";

0x00000000|1 [ef f3 08 80]  "mrs r0,msp";
0x00000000|1 [ef f3 14 80]  "mrs r0,control";
0x00000000|1 [80 f3 14 88]  "msr control,r0";

0x08000000|1 [5f f8 28 19]  "ldr.w r1,[0x7fff6dc]"
    mem[0x7fff6dc]:READ = [91 f7 00 08], r1 = 0 => r1 = 0x0800f791;


0x08011ea6|1 {
    [02 bf]                "ittt       eq"
    [d0 f8 04 21]          "ldr.eq.w   r2,[r0,#0x104]"
    [13 43]                "orr.eq     r3,r2"
    [c0 f8 04 31]          "str.w.eq   r3,[r0,#0x104]"
    [63 68]                "ldr        r3,[r4,#0x4]"
    [00 20]                "movs       r0,#0x0"
    [5a 1c]                "adds       r2,r3,#0x1"
    [02 33]                "adds       r3,#0x2"
    [62 60]                "str        r2,[r4,#0x4]"
    [44 f8 23 70]          "str.w      r7,[r4,r3,lsl #0x2]"
    [bd e8 f8 83]          "pop.w      { r3, r4, r5, r6, r7, r8, r9, pc }"
};

0x00000000|1 [b2 fb f3 f2] "udiv r2,r2,r3"
{
    r2 = 0x2468, r3 = 0x1234 => r2 = 0x2;
    r2 = 1234, r3 = 0 => r2 = 0; // Div by 0 results in 0
    r0 = 0xfffe5250, r1 = 0x3e8 => r0 = 0xfffe5250;
}
0x00000000|1 [90 fb f1 f0] "sdiv r0,r0,r1"
{
    r0 = 0x2468, r1 = 0x1234 => r0 = 0x2;
    r0 = 1234, r1 = 0 => r0 = 0; // Div by 0 results in 0
    r0 = 0xfffe5250, r1 = 0x3e8 => r0 = 0xffffff92;
}

0x00080000|1 [fe e7]        "b 0x80000"
    pc = 0x80000 => pc = 0x80000;

0x08001066|1 [6f f3 c3 03]  "bfc r3,#0x3,#0x1"
    r3 = 0xffffffff => r3 = 0xfffffff7;

// Jumps to the next instruction do not break blocks
0x8005704|1 {
    [00 f0 00 b8]   "b.w 0x8005708"
    [0f 46]         "mov r7,r1"
};


0x8008c44|1 {
    [53 f8 04 4d]   "ldr.w r4,[r3,#-0x4]!"
    [51 f8 04 2d]   "ldr.w r2,[r1,#-0x4]!"
    [94 42]         "cmp r4,r2"
    [f7 d0]         "beq 0x8008c40"
} {
    r3 = 0x10004, r1 = 0x20004, mem[0x10000]:READ = [01 23 45 67], mem[0x20000]:READ = [01 23 45 67]
    => r3 = 0x10000, r1 = 0x20000, r4 = 0x67452301, r2 = 0x67452301, pc = 0x8008c40;
}

0x800034a|1 {
    [7f ea 64 5c]   "mvns.w r12,r4, asr #0x15"
    [18 bf]         "it ne"
    [7f ea 65 5c]   "mvns.ne.w r12,r5, asr #0x15"
    [29 d0]         "beq 0x80003aa"
} {
    r12 = 0xaaaa_aaaaa, r4 = 0xffe0_0000, r5 = 0xffe0_0000 => r12 = 0, pc = 0x80003aa;
    r12 = 0xaaaa_aaaaa, r4 = 0xffc0_0000, r5 = 0xffc0_0000 => r12 = 1, pc = 0x8000356;
}

0x8000eb8|1 {
    [0c f0 00 4c]   "and        r12,r12,#0x80000000"
    [4c ea 50 20]   "orr.w      r0,r12,r0, lsr #0x9"
    [7f 32]         "adds       r2,#0x7f"
    [c2 bf]         "ittt       gt"
    [d2 f1 ff 03]   "rsbs.gt.w  r3,r2,#0xff"
    [40 ea c2 50]   "orr.gt.w   r0,r0,r2, lsl #0x17"
    [70 47]         "bx.gt      lr"
} {
    lr = 0, r3 = 127, r2 = 13, r0 = 0x88f00000, r12 = 0x0 => pc = 0x0, r0 = 0x46447800;
}


0x8002286|1 {
    [d3 1a]         "subs r3,r2,r3"
    [3a 6d]         "ldr  r2,[r7,#0x50]"
    [9a 42]         "cmp  r2,r3"
    [10 d2]         "bcs  0x80022b0"
} {
    r2 = 0x4c, r3 = 0x4c, r7 = 0x20000, mem[0x20050]:READ = [32 00 00 00] => r3 = 0x0, r2 = 0x32, pc = 0x80022b0;
    r2 = 0x4c, r3 = 0x00, r7 = 0x20000, mem[0x20050]:READ = [32 00 00 00] => r3 = 0x4c, r2 = 0x32, pc = 0x800228e;
}

0x80009ce|1 [5d f8 08 fb]   "ldr.w      pc,[sp],#0x8";
0x0001100|1 [b8 ef 05 9b]   "vext.8     d9,d8,d5,#0xb";

0x11000|1 [53 e8 00 3f] "ldrex r3,[r3,#0x0]"
    r3 = 0x1000, mem[0x1000]:READ = [04 03 02 01] => r3 = 0x01020304, exclusive_addr = 0x1000;
0x11000|1 [46 e8 00 33] "strex r3,r3,[r6,#0x0]"
{
    exclusive_addr = 0x1000, r6 = 0x1000, r3 = 0x01020304, mem[0x1000]:WRITE = [aa aa aa aa] => r3 = 0, mem[0x1000] = [04 03 02 01];
    exclusive_addr = 0x2000, r6 = 0x1000, r3 = 0x01020304, mem[0x1000]:WRITE = [aa aa aa aa] => r3 = 1, mem[0x1000] = [aa aa aa aa];
}
0x11000|1 [bf f3 2f 8f] "clrex"
    exclusive_addr = 0x1000 => exclusive_addr = 0xffff_ffff;

0x11000|1 [30 bf] "wfi";
0x11000|1 [20 bf] "wfe";

0x11000|1 {
    [18 8d] "ldrh r0,[r3,#0x28]"
    [c0 b2] "uxtb r0,r0"
};

0x11000|1 [12 06] "lsls r2,r2,#0x18"
    r2 = 0x1234_5678 => r2 = 0x7800_0000;


// VFP instructions

0x11000|1 [b8 ee 40 0a] "vcvt.f32.u32 s0,s0"
    s0 = 1 => s0 = 0x3f800000;
